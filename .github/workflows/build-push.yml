name: Build and Push

on:
  pull_request:
  push:
    branches: [main]

env:
  REGISTRY: ghcr.io/${{ github.repository }}
  COSIGN_EXPERIMENTAL: "1"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - target: chainguard-jdk25-musl
          - target: chainguard-jdk25
          - target: chainguard-jdk26ea-musl
          - target: chainguard-jdk26ea
          - target: chainguard-jdk26valhalla-musl
          - target: chainguard-jdk26valhalla
          - target: distroless-jre25
          - target: distroless-jre25-musl
          - target: distroless-jre26ea
          - target: distroless-jre26ea-musl
          - target: distroless-jre26valhalla
          - target: distroless-jre26valhalla-musl
          - target: ubi9-jdk25
          - target: ubi9-jdk26ea
          - target: ubi9-jdk26valhalla
      fail-fast: false
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3
      - uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3
      - uses: sigstore/cosign-installer@f713795cb21599bc4e5c4b58cbad1da852d7eeb9 # v3
      - name: Install security tooling
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sudo sh -s -- -b /usr/local/bin
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sudo sh -s -- -b /usr/local/bin
          curl -sSfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sudo sh -s -- -b /usr/local/bin
      - name: Login to GHCR
        if: github.event_name == 'push'
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build image
        run: |
          docker buildx bake ${{ matrix.target }} \
            --set *.args.SOURCE_DATE_EPOCH=$(date +%s) \
            ${{ github.event_name == 'push' && '--push' || '' }}

      - name: Generate SBOM
        run: |
          mkdir -p sbom
          syft $REGISTRY:${{ matrix.target }} -o cyclonedx-json > sbom/${{ matrix.target }}.cdx.json

      - name: Upload SBOM
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: sbom-${{ matrix.target }}
          path: sbom/${{ matrix.target }}.cdx.json

      - name: Scan (Trivy)
        run: trivy image --exit-code 1 --severity HIGH,CRITICAL $REGISTRY:${{ matrix.target }}

      - name: Scan (Grype)
        run: grype $REGISTRY:${{ matrix.target }}

      - name: Sign image
        if: github.event_name == 'push'
        run: cosign sign --yes $REGISTRY:${{ matrix.target }}

      - name: Attest SBOM
        if: github.event_name == 'push'
        run: cosign attest --predicate sbom/${{ matrix.target }}.cdx.json --type cyclonedx $REGISTRY:${{ matrix.target }}

  summary:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - run: echo "Build matrix complete" >> $GITHUB_STEP_SUMMARY
